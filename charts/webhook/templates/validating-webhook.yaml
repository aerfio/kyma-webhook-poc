{{- $ca := genCA (printf "%s-ca" (include "webhook.svcFullname" .)) 3650 }}
{{- $cn := include "webhook.svcFullname" . }}
{{- $altName1 := printf "%s.%s" $cn .Release.Namespace }}
{{- $altName2 := printf "%s.%s.svc" $cn .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2) 3650 $ca }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ template "webhook.name" . }}-cert
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "webhook.labels" . | nindent 4 }}
type: Opaque
data:
  tls.crt: {{ b64enc $cert.Cert }}
  tls.key: {{ b64enc $cert.Key }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ template "webhook.name" . }}-validating-webhook
  labels:
  {{- include "webhook.labels" . | nindent 4 }}
webhooks:
  - name: '{{ template "webhook.name" . }}.validating.kyma-project.io'
    clientConfig:
      caBundle: {{ b64enc $ca.Cert }}
      service:
        name: {{ template "webhook.svcFullname" . }}
        namespace: "{{ .Release.Namespace }}"
        path: {{ template "webhook.service.path" . }}
    # https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#failure-policy
    # this has to be set to ignore to allow the webhook pod to start
    failurePolicy: Ignore
    sideEffects: None
    timeoutSeconds: 5
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups: ["*"]
        apiVersions: ["*"]
        operations: ["*"]
        resources: ["*/*"] # "*/*", not "*" https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-rules
        scope: "*"
